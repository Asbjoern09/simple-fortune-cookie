# This pipeline deploys runs on main, development and staging branches, it builds, tests, uplodas docker image to docker hub and deploys to kubernetes
name: Deployment pipeline
on:
  push:
    branches:
      - main
      - development
      - staging
env:
  docker_username: ${{ secrets.DOCKER_USERNAME }}
  docker_password: ${{ secrets.DOCKER_PASSWORD }}
  GIT_COMMIT: ${{ github.sha }}
  BRANCH_NAME: ${{ github.ref_name }}
jobs:
  Build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
      - name: Build backend
        run: |
          cd backend
          go build
      - name: Build frontend
        run: |
          cd frontend
          go build
      - name: Upload repo
        uses: actions/upload-artifact@v4
        with: 
          name: code
          path: .
  Test:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - name: Run frontend test
        working-directory: frontend
        run: go test 
  Docker-image-backend:
    runs-on: ubuntu-latest
    needs: [Test]
    permissions:
      packages: write
    steps:
    - name: Download code
      uses: actions/download-artifact@v4
      with:
        name: code
        path: .
    - name: ls
      run: ls -la CI-scripts
    - name: build docker
      env:
        DIRECTORY: backend/
        IMAGE: backend
      run: bash CI-scripts/build-docker.sh
    - name: push docker
      env:
        IMAGE: backend
      run: bash CI-scripts/push-docker.sh
  Docker-image-frontend:
    runs-on: ubuntu-latest
    needs: [Test]
    permissions:
      packages: write
    steps:
    - name: Download code
      uses: actions/download-artifact@v4
      with:
        name: code
        path: .
    - name: ls
      run: ls -la CI-scripts
    - name: build docker
      env:
        DIRECTORY: frontend/
        IMAGE: frontend
      run: bash CI-scripts/build-docker.sh
    - name: push docker
      env:
        IMAGE: frontend
      run: bash CI-scripts/push-docker.sh
  Deployment:
    runs-on: ubuntu-latest
    needs: [Docker-image-frontend, Docker-image-backend]
    steps:
      - name: Download code
        uses: actions/download-artifact@v4
        with:
          name: code
          path: .
      - run: echo "${{ secrets.KUBECONFIG }}" | base64 -d > kubeconfig
      - name: Run deployment script
        run: bash CI-scripts/deploy.sh
      - name: Push to Staging if Tests Passed on Development Branch
        if: ${{ github.ref_name == 'development' && success() }}
        run: |
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git fetch origin
          git checkout staging
          git merge development
          git push origin staging
